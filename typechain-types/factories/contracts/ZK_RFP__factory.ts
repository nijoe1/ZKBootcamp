/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ZK_RFP,
  ZK_RFPInterface,
  MetadataStruct,
} from "../../contracts/ZK_RFP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_allo",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "protocol",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "pointer",
            type: "string",
          },
        ],
        internalType: "struct Metadata",
        name: "_metadata",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Allo",
    outputs: [
      {
        internalType: "contract IAllo",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_root",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "_proof_a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_proof_b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_proof_c",
        type: "uint256[2]",
      },
    ],
    name: "AllocateToRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "Registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_uniqueHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitment",
        type: "uint256",
      },
    ],
    name: "commitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "voteThreshold",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maxBid",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "useRegistryAnchor",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "metadataRequired",
                type: "bool",
              },
            ],
            internalType: "struct ZK_RFP.InitializeParams",
            name: "params",
            type: "tuple",
          },
        ],
        internalType: "struct ZK_RFP.InitializeParamsCommittee",
        name: "initializeParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "protocol",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "pointer",
            type: "string",
          },
        ],
        internalType: "struct Metadata",
        name: "_metadata",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "_managers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_registrationDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_votingDuration",
        type: "uint256",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "distributeCurrentMilestone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "getPoolData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "registrationEnds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingEnds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "protocol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "pointer",
                type: "string",
              },
            ],
            internalType: "struct Metadata",
            name: "metadata",
            type: "tuple",
          },
          {
            internalType: "contract ZKTreeVote",
            name: "privateVoteContract",
            type: "address",
          },
        ],
        internalType: "struct ZK_RFP.Pool",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "getPoolRecipients",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipientAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "proposalBid",
            type: "uint256",
          },
          {
            internalType: "enum Constants.Status",
            name: "recipientStatus",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "protocol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "pointer",
                type: "string",
              },
            ],
            internalType: "struct Metadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct ZK_RFP.Recipient[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_profileId",
        type: "bytes32",
      },
    ],
    name: "getProfileData",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "protocol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "pointer",
                type: "string",
              },
            ],
            internalType: "struct Metadata",
            name: "metadata",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "anchor",
            type: "address",
          },
        ],
        internalType: "struct IRegistry.Profile",
        name: "profile",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxBid",
        type: "uint256",
      },
    ],
    name: "increaseMaxBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolIdInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "registrationEnds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingEnds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "protocol",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "pointer",
            type: "string",
          },
        ],
        internalType: "struct Metadata",
        name: "metadata",
        type: "tuple",
      },
      {
        internalType: "contract ZKTreeVote",
        name: "privateVoteContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolWinner",
    outputs: [
      {
        internalType: "address",
        name: "recipientAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalBid",
        type: "uint256",
      },
      {
        internalType: "enum Constants.Status",
        name: "recipientStatus",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "protocol",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "pointer",
            type: "string",
          },
        ],
        internalType: "struct Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profileId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "recipientInfo",
    outputs: [
      {
        internalType: "address",
        name: "recipientAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalBid",
        type: "uint256",
      },
      {
        internalType: "enum Constants.Status",
        name: "recipientStatus",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "protocol",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "pointer",
            type: "string",
          },
        ],
        internalType: "struct Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_proposalBid",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "protocol",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "pointer",
            type: "string",
          },
        ],
        internalType: "struct Metadata",
        name: "_metadata",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "_profileMembers",
        type: "address[]",
      },
    ],
    name: "registerRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
    ],
    name: "registerValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_milestoneId",
        type: "uint256",
      },
    ],
    name: "rejectMilestone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountPercentage",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "protocol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "pointer",
                type: "string",
              },
            ],
            internalType: "struct Metadata",
            name: "metadata",
            type: "tuple",
          },
          {
            internalType: "enum IStrategy.Status",
            name: "milestoneStatus",
            type: "uint8",
          },
        ],
        internalType: "struct IStrategy.Milestone[]",
        name: "_milestones",
        type: "tuple[]",
      },
    ],
    name: "setMilestonesToStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "setPoolWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060409080825234620002a05762004ba28038038091620000228285620002bb565b8339810160c082820312620002a0576200003c82620002df565b906020926200004d848201620002df565b8186015190946001600160401b03939091848111620002a057816200007491850162000319565b906060840151858111620002a0578401908882820312620002a05788519589870187811082821117620002a5578a528251875284830151908111620002a057620000bf920162000319565b93828101948552620000e260a0620000da60808701620002df565b9501620002df565b600080546001600160c01b03191674148def91f220f3d1c16d406097ffb0daee0732772f178155600480546001600160a01b03199081166001600160a01b039b8c1617909155600580548216998b16998a179055600754909998929791939160001982146200028c578693918c93620001ab8793600180940196876007556200018a81519b8c99633a92f65f60e01b8b5260048b015260a060248b015260a48a019062000374565b9160031994858a85030160448b01525183525191818a820152019062000374565b90306064870152858203016084860152858254918281520191808452868420918d85905b8282106200026e5750505050509083809203925af19283156200026257908694939291819362000222575b50505060065516836002541617600255169060035416176003555161480690816200039c8239f35b8294955080929193503d83116200025a575b620002408183620002bb565b8101031262000257575090839151388080620001fa565b80fd5b503d62000234565b508751903d90823e3d90fd5b84541685528b988b98508a9650909401939282019282018e620001cf565b634e487b7160e01b85526011600452602485fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017620002a557604052565b51906001600160a01b0382168203620002a057565b60005b838110620003085750506000910152565b8181015183820152602001620002f7565b81601f82011215620002a05780516001600160401b038111620002a5576040519262000350601f8301601f191660200185620002bb565b81845260208284010111620002a057620003719160208085019101620002f4565b90565b906020916200038f81518092818552858086019101620002f4565b601f01601f191601019056fe60808060405260043610156200001457600080fd5b600090813560e01c908163034725701462001e2f575080630742820a14620019d157806308386eba14620019b15780630a619c8a146200167957806323adf0a514620014c75780632991621d14620013a75780633abe6bd714620012445780633e19a9a314620011bb578063436de3c5146200108a578063466e26241462000c7a5780634c578aee1462000c2e578063557ed1ba1462000c115780635d1222aa1462000bf157806369883b4e1462000bb35780637db9743b1462000b885780638512d43c1462000af657806393fc2ff41462000a98578063a5166292146200052a578063d21c87ad14620004a8578063ebc46194146200032f578063f32fc16a14620003045763ff196100146200012a57600080fd5b346200023e5760209060031982813601126200030057600435906001600160a01b03906024858360a06200015e8762002912565b0151166040519283809263facd743b60e01b82523360048301525afa908115620002f5578591620002c1575b5015620002635760405191620001a0836200211e565b600183528536818501376004541691823b156200025f57620001e19060405194631d2fdec960e11b8652600486015260606024860152606485019062002520565b9083820301604484015260605180825260005b8181106200024c5750918385878285876000859c869a859a010152601f8019910116010301925af1801562000241576200022b5750f35b6200023690620020b6565b6200023e5780f35b80fd5b6040513d84823e3d90fd5b60808101518382018801528601620001f4565b8480fd5b60405162461bcd60e51b815260048101869052603060248201527f4f6e6c792076616c696461746f722063616e206469737472696275746520637560448201526f7272656e74206d696c6573746f6e652160801b6064820152608490fd5b620002e69150863d8811620002ed575b620002dd81836200213a565b810190620025e3565b386200018a565b503d620002d1565b6040513d87823e3d90fd5b5080fd5b50346200023e57806003193601126200023e576004546040516001600160a01b039091168152602090f35b50346200023e5762000341366200232e565b6001600160a01b03602460208260a06200035b8762002912565b0151166040519283809263facd743b60e01b82523360048301525afa908115620002f557859162000485575b5015620004345783928382600454169160246040518094819363068bcd8d60e01b835260048301525afa80156200042957602091859162000402575b5001511690813b15620003fe57829160248392604051948593849263369dc5b560e01b845260048401525af1801562000241576200022b5750f35b5050fd5b6200042291503d8087833e6200041981836200213a565b810190620026b7565b38620003c3565b6040513d86823e3d90fd5b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c792076616c696461746f722063616e20696e637265617365206d6178206044820152636269642160e01b6064820152608490fd5b620004a1915060203d8111620002ed57620002dd81836200213a565b3862000387565b50346200023e5760203660031901126200023e57620004c960043562002912565b6040518091602082528051602083015260208101516040830152604081015160608301526060810151608083015262000512608082015160c060a085015260e08401906200230c565b60a0909101516001600160a01b031660c08301520390f35b503660031901610100811262000300576080136200023e5760405162000550816200211e565b600435815260603660231901126200030057604051906200057182620020e6565b6024358252604435801515810362000a45576020830152606435801515810362000a45576040830152602081019182526084356001600160401b03811162000a9457620005c3903690600401620021c5565b60a4356001600160401b0381116200025f57620005e590369060040162002228565b90620005f460c43542620024fc565b916200060360e43584620024fc565b906001855260408051966001602089015251805182890152602081015115156060890152015115156080870152608086528560a08101106001600160401b0360a08801111762000a7e5760a08601604081905260045460065489546377da8caf60e01b90935260a48901526001600160a01b0391821660c489015260e060e48901521662000696610184880188620022e5565b9073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee61010489015234610124890152620006d360a31992838a8203016101448b0152866200230c565b9188830301610164890152602060015492838152019060018a527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6928a5b81811062000a5e5750602093505060a0890191899003609f190190829034905af195861562000a5357879662000a0e575b50865460025460035460405193926001600160a01b03918216929091169060a01c63ffffffff166001600160401b03611e21860190811190861117620009fa5791849391620007c693611e21620029b08739611e218601526020611e21860101526040611e218501015260806060611e21850101526080611e218401019062002520565b039087f0938415620009ef575160405193620007e28562002102565b8452602084019182526040840190815260608401913483526080850193845260a085019560018060a01b031686528688526009602052604088209451855551600185015551600284015551600383015551805160048301556020600583019101518051906001600160401b038211620009db5762000861835462002345565b601f811162000990575b50602090601f8311600114620009235760069493929188918362000917575b50508160011b916000199060031b1c19161790555b019060018060a01b039051166bffffffffffffffffffffffff60a01b825416179055600854600160401b8110156200090357620008e7816001620008fe930160085562002495565b819391549060031b91821b91600019901b19161790565b905580f35b634e487b7160e01b83526041600452602483fd5b0151905038806200088a565b838852602088209190601f198416895b818110620009775750916001939185600698979694106200095d575b505050811b0190556200089f565b015160001960f88460031b161c191690553880806200094f565b9293602060018192878601518155019501930162000933565b83885260208820601f840160051c81019160208510620009d0575b601f0160051c01905b818110620009c357506200086b565b60008155600101620009b4565b9091508190620009ab565b634e487b7160e01b87526041600452602487fd5b6040513d88823e3d90fd5b634e487b7160e01b8b52604160045260248bfd5b9095506020813d60201162000a4a575b8162000a3060209360a084016200213a565b8101031262000a455760a00151943862000742565b600080fd5b3d915062000a1e565b6040513d89823e3d90fd5b84546001600160a01b031684526001948501946020909401930162000711565b634e487b7160e01b600052604160045260246000fd5b8380fd5b50346200023e5760203660031901126200023e576040906004358152600c6020522060018060a01b0381541662000af260018301549262000ae4600360ff600284015416920162002382565b90604051948594856200245d565b0390f35b50346200023e5760203660031901126200023e5762000b17600435620027b8565b604051809160208252805160208301526020810151604083015262000b6762000b50604083015160c0606086015260e0850190620022e5565b6060830151848203601f190160808601526200230c565b9060a0600180821b0391826080820151168286015201511660c08301520390f35b50346200023e57806003193601126200023e576005546040516001600160a01b039091168152602090f35b50346200023e5760203660031901126200023e57600435906008548210156200023e57602062000be38362002495565b90546040519160031b1c8152f35b50346200023e57806003193601126200023e576020600754604051908152f35b50346200023e57806003193601126200023e576020604051428152f35b50346200023e5760203660031901126200023e576040906004358152600b6020522060018060a01b0381541662000af260018301549262000ae4600360ff600284015416920162002382565b50346200023e57602090816003193601126200023e5760043591828252600981526001928360408420015442106200104557808352600a8252604080842060098452908420600601546001600160a01b03939190841662000cda62002775565b50815486928390815b86898c8c87851062000f4957828c858c8452600b8152604084206040519362000d0c85620020ca565b808254168552868201549183860192835283600462000d48600360ff6002860154169460408b019562000d3f816200229f565b86520162002382565b60608901908152878a52600c835260408a20895181546001600160a01b03191690871617815586518c8201559351600285019062000d86816200229f565b62000d91816200229f565b60ff8019835416911617905551928351600382015501910151978851906001600160401b03821162000f355762000dc9835462002345565b601f811162000ee9575b508599601f831160011462000e865782918a9b83928c9462000e7a575b50501b916000199060031b1c19161790555b80600454169451169051906040519283015260408201526040815262000e2881620020e6565b823b1562000e755762000e62928492836040518096819582946305d8703160e31b84526004840152604060248401526044830190620022e5565b03925af1801562000241576200022b5750f35b505050fd5b015192508c8062000df0565b601f9291921982169a848b52878b20918b5b8d811062000ed35750838c9d1062000eb9575b505050811b01905562000e02565b015160001960f88460031b161c191690558a808062000eab565b8183015184559285019291890191890162000e98565b838a52868a20601f840160051c81019188851062000f2a575b601f0160051c019082905b82811062000f1d57505062000dd3565b6000815501829062000f0d565b909150819062000f02565b634e487b7160e01b89526041600452602489fd5b600b604062000fa89262000f5e888a620024e3565b939054600394851b1c9788835252206040519362000f7c85620020ca565b8582541685528101548d85015260ff60028201541662000f9c816200229f565b60408501520162002382565b60608201525160405163086a29d960e21b81529116600482015288816024818a5afa9081156200103a578c9162001007575b5084811162000ff7575b505062000ff1906200255f565b62000ce3565b909650925062000ff13862000fe4565b90508881813d831162001032575b6200102181836200213a565b8101031262000a4557513862000fda565b503d62001015565b6040513d8e823e3d90fd5b60405162461bcd60e51b815260048101839052601860248201527f566f74696e67206973207374696c6c206f6e676f696e672100000000000000006044820152606490fd5b50346200023e5760403660031901126200023e5760043590620010ac6200209f565b918082526020926009845260018060a01b0391602485846006604088200154166040519283809263facd743b60e01b82523360048301525afa908115620002f557859162001199575b5015620011455783946009918552528160066040852001541691823b1562000e755760248492836040519586948593639fca516960e01b85521660048401525af1801562000241576200022b5750f35b60405162461bcd60e51b815260048101869052602660248201527f4f6e6c792076616c696461746f722063616e2072656769737465722076616c696044820152656461746f722160d01b6064820152608490fd5b620011b49150863d8811620002ed57620002dd81836200213a565b38620010f5565b50346200023e5760203660031901126200023e57604090600435815260096020522080546001820154916200123a6002820154916003810154620012026004830162002382565b91600660018060a01b039101541693604051968796875260208701526040860152606085015260c0608085015260c08401906200230c565b9060a08301520390f35b50346200023e5762001256366200232e565b6001600160a01b03602460208260a0620012708762002912565b0151166040519283809263facd743b60e01b82523360048301525afa908115620002f557859162001384575b5015620013315783928382600454169160246040518094819363068bcd8d60e01b835260048301525afa80156200042957602091859162001313575b5001511690813b15620003fe578291602483926040519485938492636557698160e11b845260048401525af1801562000241576200022b5750f35b6200132a91503d8087833e6200041981836200213a565b38620012d8565b60405162461bcd60e51b815260206004820152602560248201527f4f6e6c792076616c696461746f722063616e2072656a656374206d696c6573746044820152646f6e65732160d81b6064820152608490fd5b620013a0915060203d8111620002ed57620002dd81836200213a565b386200129c565b50346200023e5760603660031901126200023e57600435908181526020916009835260018060a01b0390602484836006604087200154166040519283809263facd743b60e01b82523360048301525afa90811562000429578491620014a5575b501562001460578293600991845252600660408320015416803b156200145d57818091604460405180948193630280f7d760e31b83526024356004840152833560248401525af1801562000241576200022b5750f35b50fd5b60405162461bcd60e51b815260048101859052601a60248201527f4f6e6c792076616c696461746f722063616e20636f6d6d6974210000000000006044820152606490fd5b620014c09150853d8711620002ed57620002dd81836200213a565b3862001407565b50346200023e576020806003193601126200030057906004358152600a8252604081208054620014f78162002210565b916200150760405193846200213a565b818352601f19620015188362002210565b01845b8181106200165b575050835b828110620015ca5750505060405191838301848452825180915260408401948060408360051b870101940192955b828710620015635785850386f35b909192938280620015b9600193603f198a82030186528851858060a01b038151168252838101518483015260408101516200159e816200229f565b6040830152606080910151916080809282015201906200230c565b960192019601959291909262001555565b80620015de620016529284989798620024e3565b9054600391821b1c8852600b87526200162d6040892091604051926200160484620020ca565b80546001600160a01b0316845260018101548a850152600281015460ff1662000f9c816200229f565b60608201526200163e8287620027a3565b526200164b8186620027a3565b506200255f565b94939462001527565b958095966200166962002775565b828288010152019594956200151b565b50346200023e5760403660031901126200023e576024906001600160401b03823560043582821162000a94573660238301121562000a9457816004013591620016c28362002210565b90620016d260405192836200213a565b8382526020948583019088829660051b84010192368411620019ad57898101925b8484106200192d5750505050508185526009845260408520936006604051936200171d8562002102565b8654855260019485880154848201526002880154604082015260a06003890154986060998a840152620017536004820162002382565b6080840152600180831b039485910154169101908152888360045416928b6040518095819363068bcd8d60e01b835260048301525afa9182156200190157838b9286928c956200190c575b5051166040519283809263facd743b60e01b82523360048301525afa90811562001901578991620018df575b501562001890578201511694853b156200188c579291906040519763b9d7040b60e01b89528801918160048a015251809252604488019360448360051b8a0101959488915b84831062001834575088808b8181808c0381838f5af1801562000241576200022b5750f35b909192939484808298998d6043199082030186528a51908151815260408062001869858501518987860152898501906200230c565b9301519162001878836200229f565b01529901930193019195949392906200180f565b8680fd5b60405162461bcd60e51b8152600481018490526022818b01527f4f6e6c792076616c696461746f722063616e20736574206d696c6573746f6e65604482015261732160f01b6064820152608490fd5b620018fa9150843d8611620002ed57620002dd81836200213a565b38620017ca565b6040513d8b823e3d90fd5b620019259195508c3d8091833e6200041981836200213a565b93386200179e565b8335838111620019a957820160606023198236030112620019a957604051906200195782620020e6565b8c81013582526044810135858111620019a557906200197e6064928f3691840101620021c5565b8c84015201356007811015620019a15760408201528152928801928801620016f3565b8b80fd5b8c80fd5b8a80fd5b8880fd5b50346200023e57806003193601126200023e576020600654604051908152f35b50346200023e576003199060a0368301126200023e57602435916001600160401b036004356044358281116200025f5762001a1190369060040162002178565b9260643583811162001e2b5762001a2d903690600401620021c5565b956084358481116200188c5762001a4990369060040162002228565b91838752602095600987526040882054421162001de65762001abd89939288928a60018060a01b039762001ae489600554169462001a896007546200255f565b928360075562001ace6040519b8c998a988997633a92f65f60e01b8952600489015260a0602489015260a4880190620022e5565b90848783030160448801526200230c565b9133606486015284830301608485015262002520565b03925af191821562000a5357879262001db1575b508260a062001b0784620027b8565b015116946040519587870152876040870152816060870152608080870152878760048862001b3a8d60a08301906200230c565b039b62001b50601f199d8e81018c528b6200213a565b6040519562001b5f87620020ca565b338752838701908152604087019089604060019788855260608b019586528b8152600b8852209851166bffffffffffffffffffffffff60a01b895416178855518588015560028701905162001bb4816200229f565b62001bbf816200229f565b60ff8019835416911617905551948551600382015501930151998a5192831162001d9d5762001bef845462002345565b601f811162001d51575b508890601f841160011462001cdf575091808062001c4995938b9a999897958d9e62001c7a9e9462001cd3575b50501b916000199060031b1c19161790555b838952600a86526040892062002584565b506004541690866040518097819582946301d703a760e21b84526004840152604060248401526044830190620022e5565b03925af1801562001cc85762001c8e578280f35b81813d831162001cc0575b62001ca581836200213a565b81010312620003005762001cb9906200256f565b5038808280f35b503d62001c99565b6040513d85823e3d90fd5b01519250388062001c26565b839293169a848b52898b209b8b5b81811062001d3b57509b8a999897969492849262001c49979562001c7a9e9f1062001d21575b505050811b01905562001c38565b015160001960f88460031b161c1916905538808062001d13565b838301518e559c85019c928b01928b0162001ced565b848b52898b20601f850160051c8101918b861062001d92575b601f0160051c019083905b82811062001d8557505062001bf9565b6000815501839062001d75565b909150819062001d6a565b634e487b7160e01b8a52604160045260248afd5b9091508581813d831162001dde575b62001dcc81836200213a565b810103126200188c5751903862001af8565b503d62001dc0565b60405162461bcd60e51b815260048101889052601760248201527f526567697374726174696f6e20697320636c6f736564210000000000000000006044820152606490fd5b8580fd5b905034620003005761018036600319011262000300576004359062001e536200209f565b913660a3121562000a945762001e69826200211e565b60c4908236831162001e2b576084905b8382106200208e5750503660e312156200025f5760405162001e9b816200211e565b80610144933685116200208a57905b8482106200203257505036610163121562001e2b576040519262001ece846200211e565b8361018491368311620019ad57905b828210620020215750505081865260206009815260019283604089200154421162001fdc5787526009815260408720600601546001600160a01b0390811695863b15620019ad5787878787878d9762001f628997604051998a98634e3dcdd560e01b8a52166004890152604435602489015260643560448901526064880190620025fd565b8660a487015b6002821062001fad575050505050836101649262001f8d8593610124850190620025fd565b5af18015620002415762001f9f575080f35b62001faa90620020b6565b80f35b84969850839597508062001fc9604092859795949651620025fd565b0194019101918896949288969462001f68565b60405162461bcd60e51b815260048101839052601860248201527f4f6e6c792076616c696461746f722063616e20766f74652100000000000000006044820152606490fd5b813581526020918201910162001edd565b36601f830112156200208a576040516200204c816200211e565b8060408401368111620019a95784915b818310620020795750505081602091604093520191019062001eaa565b82358152602092830192016200205c565b8780fd5b813581526020918201910162001e79565b602435906001600160a01b038216820362000a4557565b6001600160401b03811162000a7e57604052565b608081019081106001600160401b0382111762000a7e57604052565b606081019081106001600160401b0382111762000a7e57604052565b60c081019081106001600160401b0382111762000a7e57604052565b604081019081106001600160401b0382111762000a7e57604052565b90601f801991011681019081106001600160401b0382111762000a7e57604052565b6001600160401b03811162000a7e57601f01601f191660200190565b81601f8201121562000a455780359062002192826200215c565b92620021a260405194856200213a565b8284526020838301011162000a4557816000926020809301838601378301015290565b919060408382031262000a455760405190620021e1826200211e565b8193803583526020810135916001600160401b03831162000a45576020926200220b920162002178565b910152565b6001600160401b03811162000a7e5760051b60200190565b81601f8201121562000a4557803591620022428362002210565b926200225260405194856200213a565b808452602092838086019260051b82010192831162000a45578301905b8282106200227e575050505090565b81356001600160a01b038116810362000a455781529083019083016200226f565b60071115620022aa57565b634e487b7160e01b600052602160045260246000fd5b60005b838110620022d45750506000910152565b8181015183820152602001620022c3565b906020916200230081518092818552858086019101620022c0565b601f01601f1916010190565b90604060206200232b93805184520151918160208201520190620022e5565b90565b604090600319011262000a45576004359060243590565b90600182811c9216801562002377575b60208310146200236157565b634e487b7160e01b600052602260045260246000fd5b91607f169162002355565b906040519162002392836200211e565b8281548152600180920191604051928391600091805490620023b48262002345565b80865291838116908115620024325750600114620023e5575b50505060209291620023e19103846200213a565b0152565b909493925060005260209081600020946000915b8183106200241957509394509192509082010181620023e16020620023cd565b86548884018501529586019587945091830191620023f9565b60ff191660208781019190915292151560051b860183019450859350620023e1929150620023cd9050565b90926080926200232b959460018060a01b03168352602083015262002482816200229f565b604082015281606082015201906200230c565b600854811015620024cd5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015620024cd5760005260206000200190600090565b919082018092116200250a57565b634e487b7160e01b600052601160045260246000fd5b90815180825260208080930193019160005b82811062002541575050505090565b83516001600160a01b03168552938101939281019260010162002532565b60001981146200250a5760010190565b51906001600160a01b038216820362000a4557565b91906001830160009082825280602052604082205415600014620025dd57845494600160401b861015620009035783620025cd620008e7886001604098999a01855584620024e3565b9055549382526020522055600190565b50925050565b9081602091031262000a455751801515810362000a455790565b6000915b600283106200260f57505050565b60019082518152602080910192019201919062002601565b81601f8201121562000a4557805162002640816200215c565b926200265060405194856200213a565b8184526020828401011162000a45576200232b9160208085019101620022c0565b919060408382031262000a4557604051906200268d826200211e565b8193805183526020810151916001600160401b03831162000a45576020926200220b920162002627565b9060208282031262000a455781516001600160401b039283821162000a45570160c08183031262000a455760405192620026f18462002102565b8151845260208201516001600160a01b038116810362000a455760208501526200271e604083016200256f565b6040850152606082015190811162000a455760a0926200274091830162002671565b606084015260808101516080840152015160a082015290565b6040519062002768826200211e565b6060602083600081520152565b604051906200278482620020ca565b8160008152600060208201526000604082015260606200220b62002759565b8051821015620024cd5760209160051b010190565b604060a08151620027c98162002102565b6000918183809352826020820152606085820152620027e762002759565b60608201526080810183905201526005548251628a678560e11b815260048101949094528190849060249082906001600160a01b03165afa9283156200290657819362002835575b50505090565b909192503d8083833e6200284a81836200213a565b810190602081830312620029025780516001600160401b03918282116200025f57019260c0848403126200023e57845194620028868662002102565b845186526020850151602087015280850151838111620029025784620028ae91870162002627565b9086015260608401519182116200023e575091620028d560a092620028f494830162002671565b6060850152620028e8608082016200256f565b6080850152016200256f565b60a08201523880806200282f565b8280fd5b509051903d90823e3d90fd5b60a06040918251620029248162002102565b600092818480935282602082015282868201528260608201526200294762002759565b60808201520152815260096020522060405190620029658262002102565b80548252600181015460208301526002810154604083015260038101546060830152620029956004820162002382565b6080830152600601546001600160a01b031660a08201529056fe604060c0815234620002c75762001e21803803806200001e81620002e2565b928339810190608081830312620002c757805163ffffffff93848216809203620002c75760206200005181850162000308565b946200005f83860162000308565b60608601516001600160401b0396919591878211620002c757019180601f84011215620002c7578251968711620002cc5760059287841b908580620000a6818501620002e2565b809b81520192820101928311620002c75785809101915b838310620002ac575050600380546001600160401b0319169055505080156200025c578281101562000218576000805463ffffffff1916821781556001600160a01b0397881660805296875b8981168381101562000154579081620001238c936200031d565b908b5260018752878b205516898114620001405760010162000109565b634e487b7160e01b89526011600452602489fd5b505091969590948860001980970181811162000140578492916200017991166200031d565b88805260028652868920551660a052855b8151811015620001d75780881b82018401518316875260078452848720805460ff19166001179055858114620001c3576001016200018a565b634e487b7160e01b87526011600452602487fd5b600680546001600160a01b03191633179055845161150590816200091c82396080518181816101c80152610c5d015260a05181818161058601526107ee0152f35b835162461bcd60e51b815260048101849052601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606490fd5b835162461bcd60e51b815260048101849052602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152608490fd5b8190620002b98462000308565b8152019101908590620000bd565b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b03811183821017620002cc57604052565b51906001600160a01b0382168203620002c757565b806200034857507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200037657507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620003a457507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103620003d257507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200040057507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200042e57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200045c57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200048a57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620004b857507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103620004e557507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200051357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200054157507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036200056f57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d81036200059d57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103620005cb57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103620005f957507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200062757507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200065557507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200068357507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620006b157507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103620006df57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200070d57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200073b57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036200076957507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200079757507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620007c557507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103620007f357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200082157507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200084e57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200087c57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620008aa57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03620008d6577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182631407beb8146108815750816321a8a764146108495781632997e86b1461081d5781632b7ac3f3146107d9578163414a37ba1461079e5781634e3dcdd5146103ec5781634ecf518b146103c95781635bb93995146103ad5781636d9833e314610384578163839df945146103575781638da5cb5b1461032e57816390eeb02b146103095781639fca5169146102ce578163ba70f757146102a0578163c2b40ae414610278578163cd87a3b41461025c578163e829558814610232578163ec732959146101f7578163ed33639f146101b3578163f178e47c1461018757508063fa52c7d81461014a578063facd743b1461014a5763fc7e9c6f1461012257600080fd5b346101465781600319360112610146576003549051602091821c63ffffffff168152f35b5080fd5b50346101465760203660031901126101465760209160ff9082906001600160a01b03610174610ba1565b1681526007855220541690519015158152f35b9050346101af5760203660031901126101af5760209282913581526001845220549051908152f35b8280fd5b505034610146578160031936011261014657517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610146578160031936011261014657602090517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b828434610259576020366003190112610259575061025260209235610e82565b9051908152f35b80fd5b50503461014657816003193601126101465760209051601e8152f35b9050346101af5760203660031901126101af5760209282913581526002845220549051908152f35b5050346101465781600319360112610146578060209263ffffffff6003541681526002845220549051908152f35b505034610146576020366003190112610146576001600160a01b036102f1610ba1565b16825260076020528120805460ff1916600117905580f35b50503461014657816003193601126101465760209063ffffffff600354169051908152f35b50503461014657816003193601126101465760065490516001600160a01b039091168152602090f35b9050346101af5760203660031901126101af578160209360ff923581526005855220541690519015158152f35b82843461025957602036600319011261025957506103a460209235610de6565b90519015158152f35b505034610146576020906102526103c336610b86565b90610c21565b50503461014657816003193601126101465763ffffffff60209254169051908152f35b9050346101af576101603660031901126101af57610408610ba1565b9060249283359160443594366083121561079a5782519161042883610bb7565b60a49183368411610726576064905b84821061078a5750503660c312156106695784519361045585610bb7565b846101249436861161078657905b85821061072a5750503661014312156107265785519361048285610bb7565b846101649136831161072257905b82821061071257505050868a5260209783895260ff878c2054166106d2576104b78a610de6565b1561069057865199878b018b811067ffffffffffffffff82111761067e578852888b52898b01528651637ae4eb4f60e11b8152959795916104fb90858401906114a7565b8a9795604483015b6002808b101561055057898c918f8b51859091905b838210610532575050505060019201980199019896610503565b82945094809193956001935181520193019101908e93918d93610518565b5050899496506105758b61056a8e9a9860c48701906114a7565b6101048501906114a7565b6001600160a01b03928581610144817f000000000000000000000000000000000000000000000000000000000000000088165afa90811561067457899161063a575b5015610608578752858452848720600160ff198254161790551690818652600983528386205494600186018096116105f757505084526009905282205580f35b634e487b7160e01b87526011905285fd5b855162461bcd60e51b8152808801869052600d818601526c24b73b30b634b210383937b7b360991b6044820152606490fd5b90508581813d831161066d575b6106518183610be9565b810103126106695751801515810361066957896105b7565b8880fd5b503d610647565b87513d8b823e3d90fd5b634e487b7160e01b8d5260418652848dfd5b865162461bcd60e51b81528085018a9052601c818501527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b6064848a85818b519362461bcd60e51b85528401528201527f546865206e756c6c696669657220686173206265656e207375626d69747465646044820152fd5b8135815260209182019101610490565b8c80fd5b8980fd5b36601f8301121561078657875161074081610bb7565b8089840136811161078257918a9285949294905b80821061076c57505081529201916020019050610463565b813586526020958601958d955090910190610754565b8e80fd5b8b80fd5b8135815260209182019101610437565b8680fd5b505034610146578160031936011261014657602090517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b505034610146578160031936011261014657517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9050346101af5760203660031901126101af57816020938260ff93358252855220541690519015158152f35b5050346101465760203660031901126101465760209181906001600160a01b03610871610ba1565b1681526009845220549051908152f35b84918434610b825761089236610b86565b93903386526020916007835260ff848820541615610b4157508086526008825260ff8387205416610af5578486526005825260ff8387205416610aa957848652600582528286209460019460ff1996868882541617905563ffffffff9081600354861c169180610904818c5416611456565b168314610a4d57908291879385928a8d80915b6109b9575b5050505091600896959493917f401999886e5f90a91b92a0bfb7e2d48f714651a4d1c929bb3a753525ba066b919360035490601e8161095c818516611492565b160616809163ffffffff1916176003558c5260028752828c205561097f81611492565b67ffffffff0000000060035491881b169067ffffffff0000000019161760035581519081524286820152a286525283209182541617905580f35b9193949092959685835416928d87861694851015610a3f57637fffffff93610a01938996938f93808d1615600014610a305783946109f687610e82565b968352522055610c21565b958c1c169116838114610a1d578995949392908b018d8c610917565b634e487b7160e01b8d526011835260248dfd5b91939092948352522054610c21565b50909796508195945061091c565b865162461bcd60e51b8152808301879052603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b50905162461bcd60e51b815291820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b50905162461bcd60e51b815291820152602160248201527f5468697320756e69717565206861736820697320616c726561647920757365646044820152602160f81b6064820152608490fd5b62461bcd60e51b8152848101839052601a60248201527f4f6e6c792076616c696461746f722063616e20636f6d6d6974210000000000006044820152606490fd5b8380fd5b6040906003190112610b9c576004359060243590565b600080fd5b600435906001600160a01b0382168203610b9c57565b6040810190811067ffffffffffffffff821117610bd357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610bd357604052565b9190826040910312610b9c576020825192015190565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001929183821015610da25783811015610d535760018060a01b037f000000000000000000000000000000000000000000000000000000000000000016936040908151633f1a118760e01b94858252600482015260009485602483015285604483015283826064818b5afa978815610d4957869798859697938991610d27575b506064939486519889968795865208600484015260248301528760448301525afa928315610d1c5792610cf257505090565b610d119250803d10610d15575b610d098183610be9565b810190610c0b565b5090565b503d610cff565b9051903d90823e3d90fd5b60649450610d429150863d8811610d1557610d098183610be9565b9093610cc0565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b8015610e7c5763ffffffff8060035416918260019384805b610e0e575b505050505050600090565b15610e6d575b60009084811690818352600260205260408320548514610e6457859115610e5c575b168015610e4857600019019085610dfe565b634e487b7160e01b82526011600452602482fd5b50601e610e36565b50505050505090565b8184821603610e145780610e03565b50600090565b80610eac57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103610ed957507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103610f0657507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103610f3357507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103610f6057507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103610f8d57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103610fba57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103610fe757507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b6008810361101457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b6009810361104057507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a810361106d57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b810361109a57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036110c757507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d81036110f457507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e810361112157507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f810361114e57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b6010810361117b57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036111a857507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036111d557507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b6013810361120257507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b6014810361122f57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b6015810361125c57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b6016810361128957507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036112b657507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036112e357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361131057507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a810361133d57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b810361136a57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c810361139657507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036113c357507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e81036113f057507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f0361141b577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b801561148c5760ff8111611476576001901b9063ffffffff821161147657565b634e487b7160e01b600052601160045260246000fd5b50600190565b90600163ffffffff8093160191821161147657565b6000915b600283106114b857505050565b6001908251815260208091019201920191906114ab56fea2646970667358221220a92ea70d3e7b8ee680119d66aa298cd3c957d6c8d7d83f24894e7c4057986af264736f6c63430008140033a26469706673582212205178a86a62800c4e720d4be65e60de1cf5e09715c9e45174255215f4529738e564736f6c63430008140033";

type ZK_RFPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZK_RFPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZK_RFP__factory extends ContractFactory {
  constructor(...args: ZK_RFPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registry: PromiseOrValue<string>,
    _allo: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _metadata: MetadataStruct,
    _hasher: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZK_RFP> {
    return super.deploy(
      _registry,
      _allo,
      _name,
      _metadata,
      _hasher,
      _verifier,
      overrides || {}
    ) as Promise<ZK_RFP>;
  }
  override getDeployTransaction(
    _registry: PromiseOrValue<string>,
    _allo: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _metadata: MetadataStruct,
    _hasher: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registry,
      _allo,
      _name,
      _metadata,
      _hasher,
      _verifier,
      overrides || {}
    );
  }
  override attach(address: string): ZK_RFP {
    return super.attach(address) as ZK_RFP;
  }
  override connect(signer: Signer): ZK_RFP__factory {
    return super.connect(signer) as ZK_RFP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZK_RFPInterface {
    return new utils.Interface(_abi) as ZK_RFPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZK_RFP {
    return new Contract(address, _abi, signerOrProvider) as ZK_RFP;
  }
}
